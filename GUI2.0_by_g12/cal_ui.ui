<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>MainWindow</class>
 <widget class="QMainWindow" name="MainWindow">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>1360</width>
    <height>842</height>
   </rect>
  </property>
  <property name="windowTitle">
   <string>MainWindow</string>
  </property>
  <property name="styleSheet">
   <string notr="true"/>
  </property>
  <widget class="QWidget" name="centralwidget">
   <property name="styleSheet">
    <string notr="true"/>
   </property>
   <widget class="QPushButton" name="pushButton">
    <property name="geometry">
     <rect>
      <x>680</x>
      <y>340</y>
      <width>91</width>
      <height>29</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>微软雅黑</family>
      <pointsize>10</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">/********************QPushButton样式**********************/
QPushButton {
    border: 2px solid #8f8f91;         /* 设置边框粗细、样式、颜色*/
    border-radius: 6px;                /* 设置边框圆角 */
    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                      stop: 0 #f6f7fa, stop: 1 #dadbde);
    min-width: 80px;                   /* 设置按键的最小宽度 */
    min-height: 25px;
}

QPushButton:pressed{                   /* 设置按键按下样式 */
    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                      stop: 0 #dadbde, stop: 1 #f6f7fa);
}

QPushButton:flat {
    border: none; /* no border for a flat push button */
}

QPushButton:default {                 /* 设置默认按键样式 */
    border-color: rgb(85, 170, 255);
}

QPushButton:open {                    /* 设置菜单打开时button样式*/
    background - color:qlineargradient(x1: 0 , y1: 0 , x2: 0 , y2: 1 ,
                                  stop: 0 #dadbde, stop: 1 #f6f7fa);
}

QPushButton::menu-indicator {          /* 设置下拉箭头 */
    subcontrol-origin: content;        /* 父控件内子控件的原点矩形。是QSS独有的属性。值为父控件的盒子模式的区域 */
    subcontrol-position: center right; /* 设置下拉箭头显示位置为水平方向上靠右，垂直方向居中*/
}

QPushButton::menu-indicator:pressed,
QPushButton::menu-indicator:open {
    position: relative;                /* 指定了元素的定位类型*/
    top: 1px; left: 2px;               /* 设置在点击按键、打开菜单时偏移下拉箭头*/
}

</string>
    </property>
    <property name="text">
     <string>计算正弦值</string>
    </property>
   </widget>
   <widget class="QPushButton" name="pushButton_2">
    <property name="geometry">
     <rect>
      <x>870</x>
      <y>340</y>
      <width>84</width>
      <height>29</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Agency FB</family>
      <pointsize>10</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">/********************QPushButton样式**********************/
QPushButton {
    border: 2px solid #8f8f91;         /* 设置边框粗细、样式、颜色*/
    border-radius: 6px;                /* 设置边框圆角 */
    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                      stop: 0 #f6f7fa, stop: 1 #dadbde);
    min-width: 80px;                   /* 设置按键的最小宽度 */
    min-height: 25px;
}

QPushButton:pressed{                   /* 设置按键按下样式 */
    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                      stop: 0 #dadbde, stop: 1 #f6f7fa);
}

QPushButton:flat {
    border: none; /* no border for a flat push button */
}

QPushButton:default {                 /* 设置默认按键样式 */
    border-color: rgb(85, 170, 255);
}

QPushButton:open {                    /* 设置菜单打开时button样式*/
    background - color:qlineargradient(x1: 0 , y1: 0 , x2: 0 , y2: 1 ,
                                  stop: 0 #dadbde, stop: 1 #f6f7fa);
}

QPushButton::menu-indicator {          /* 设置下拉箭头 */
    subcontrol-origin: content;        /* 父控件内子控件的原点矩形。是QSS独有的属性。值为父控件的盒子模式的区域 */
    subcontrol-position: center right; /* 设置下拉箭头显示位置为水平方向上靠右，垂直方向居中*/
}

QPushButton::menu-indicator:pressed,
QPushButton::menu-indicator:open {
    position: relative;                /* 指定了元素的定位类型*/
    top: 1px; left: 2px;               /* 设置在点击按键、打开菜单时偏移下拉箭头*/
}

</string>
    </property>
    <property name="text">
     <string>计算余值</string>
    </property>
   </widget>
   <widget class="QWidget" name="" native="true">
    <property name="geometry">
     <rect>
      <x>650</x>
      <y>110</y>
      <width>391</width>
      <height>201</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true"/>
    </property>
    <layout class="QVBoxLayout" name="verticalLayout_2">
     <item>
      <layout class="QHBoxLayout" name="horizontalLayout">
       <item>
        <widget class="QLabel" name="label">
         <property name="font">
          <font>
           <family>Microsoft YaHei UI</family>
           <pointsize>22</pointsize>
           <weight>50</weight>
           <bold>false</bold>
          </font>
         </property>
         <property name="styleSheet">
          <string notr="true">QLabel
{
 		border-radius:9px;
		background:rgba(66, 195, 255, 0);
color: rgb(0,0, 0);
}
</string>
         </property>
         <property name="text">
          <string>计算类型</string>
         </property>
        </widget>
       </item>
       <item>
        <widget class="QComboBox" name="comboBox">
         <property name="font">
          <font>
           <family>微软雅黑</family>
           <pointsize>14</pointsize>
           <weight>50</weight>
           <bold>false</bold>
          </font>
         </property>
         <property name="styleSheet">
          <string notr="true">/********************QComboBox样式**********************/
QComboBox {
    border: 1px solid gray;
    border-radius: 3px;
    padding: 1px 18px 1px 3px;         /* 设置元素边框与元素内容之间的上右下左的内边距 */
    min-width: 6em;
}

QComboBox:editable {                   /* 设置可编辑的样式*/
    background-color: white;
}

QComboBox:!editable,                   /* QComboBox不可编辑状态*/
QComboBox::drop-down:editable {        /* 下拉箭头按键区域可编辑状态*/
     background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                 stop: 0 #E1E1E1, stop: 0.4 #DDDDDD,
                                 stop: 0.5 #D8D8D8, stop: 1.0 #D3D3D3);
}

QComboBox:!editable:on, QComboBox::drop-down:editable:on {      /* 当弹出窗口打开时，QComboBox获取“打开”状态(打开下拉框状态)*/
    background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                stop: 0 #D3D3D3, stop: 0.4 #D8D8D8,
                                stop: 0.5 #DDDDDD, stop: 1.0 #E1E1E1);
}

QComboBox:on {       /* 弹出下拉框窗口时移动文本*/
    padding-top: 3px;
    padding-left: 6px;
}

QComboBox::drop-down {                   /* 设置下拉按键*/
    subcontrol-origin: padding;          /* 设置按键在QComboBox盒子模型中的参考位置margin border padding content*/
    subcontrol-position: top right;      /* 设置按键位置靠上靠右*/
    background-color: rgb(245, 245, 245);
    width: 20px;

    border-left-width: 2px;              /* 设置下拉按键左边框宽度*/
    border-left-color: rgb(0, 255, 0);   /* 左边框颜色*/
    border-left-style: solid;
    border-top-right-radius: 3px;        /* 设置边框圆角*/
    border-bottom-right-radius: 3px;
}

QComboBox::down-arrow {                  /* 设置下拉箭头*/
    image: url(:/image/下.png);
}

QComboBox::down-arrow:on {               /* 打开下拉框时移动下拉箭头*/
    top: 1px;
    left: 1px;
}

QComboBox QAbstractItemView {
    border: 2px solid rgb(0, 255, 0);      /* 设置下拉列表边框*/
    selection-background-color: lightgray; /* 设置下拉列表选择项的背景色*/
}

</string>
         </property>
         <item>
          <property name="text">
           <string>三角函数</string>
          </property>
         </item>
         <item>
          <property name="text">
           <string>反三角函数</string>
          </property>
         </item>
        </widget>
       </item>
      </layout>
     </item>
     <item>
      <layout class="QHBoxLayout" name="horizontalLayout_4">
       <item>
        <widget class="QLabel" name="label_2">
         <property name="font">
          <font>
           <family>微软雅黑</family>
           <pointsize>20</pointsize>
          </font>
         </property>
         <property name="text">
          <string>请输入角度</string>
         </property>
        </widget>
       </item>
       <item>
        <widget class="QLabel" name="label_3">
         <property name="font">
          <font>
           <family>微软雅黑</family>
           <pointsize>20</pointsize>
           <weight>50</weight>
           <bold>false</bold>
          </font>
         </property>
         <property name="text">
          <string>计算结果</string>
         </property>
        </widget>
       </item>
      </layout>
     </item>
     <item>
      <layout class="QHBoxLayout" name="horizontalLayout_3">
       <item>
        <widget class="QLineEdit" name="lineEdit_2">
         <property name="styleSheet">
          <string notr="true">QLineEdit
{
	border: 1px solid gray; /* 边框 */
	border-radius: 4px;     /* 边框圆角 */
	padding: 0 8px;         /* 内容与边框距离 */
	background: white;      /* 背景颜色 */
	selection-background-color: darkgray; /*所选内容的背景颜色*/
}
</string>
         </property>
        </widget>
       </item>
       <item>
        <widget class="QLineEdit" name="lineEdit">
         <property name="styleSheet">
          <string notr="true">QLineEdit
{
	border: 1px solid gray; /* 边框 */
	border-radius: 4px;     /* 边框圆角 */
	padding: 0 8px;         /* 内容与边框距离 */
	background: white;      /* 背景颜色 */
	selection-background-color: darkgray; /*所选内容的背景颜色*/
}
</string>
         </property>
        </widget>
       </item>
      </layout>
     </item>
    </layout>
   </widget>
   <widget class="QWidget" name="widget" native="true">
    <property name="geometry">
     <rect>
      <x>-20</x>
      <y>-10</y>
      <width>1391</width>
      <height>831</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">background-image: url(:/lay/cqu2.jpg);
background-position: center center;
/* 背景图不平铺 */
background-repeat: no-repeat;
/* 当内容高度大于图片高度时，背景图像的位置相对于viewport固定 */
background-attachment: fixed;
/* 让背景图基于容器大小伸缩 */
background-size: cover;
height:200%;
width:200%;</string>
    </property>
   </widget>
   <zorder>widget</zorder>
   <zorder>horizontalLayoutWidget</zorder>
   <zorder>horizontalLayoutWidget_2</zorder>
   <zorder>horizontalLayoutWidget_3</zorder>
   <zorder>pushButton</zorder>
   <zorder>pushButton_2</zorder>
   <zorder></zorder>
  </widget>
  <widget class="QMenuBar" name="menubar">
   <property name="geometry">
    <rect>
     <x>0</x>
     <y>0</y>
     <width>1360</width>
     <height>23</height>
    </rect>
   </property>
  </widget>
  <widget class="QStatusBar" name="statusbar"/>
 </widget>
 <resources>
  <include location="aaa.qrc"/>
 </resources>
 <connections/>
</ui>
